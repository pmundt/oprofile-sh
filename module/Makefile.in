LD=ld
CC=gcc

MODINSTALLDIR = @MODINSTALLDIR@/oprofile
INCLUDES = -I@KINC@/ -I@topdir@/ -I@topdir@/libutil/ -I@topdir@/libop/
BASIC_KCFLAGS = -mcpu=i686 -pipe -O2 -fomit-frame-pointer -fno-strict-aliasing -Wall -Wstrict-prototypes -Wunused 
BASIC_KCFLAGS += $(INCLUDES) -D__KERNEL__ -DMODULE @BKCFLAGS@ @MODVERSIONS@
KCFLAGS = $(BASIC_KCFLAGS) @NO_MODULE_VERSION@
ASMFLAGS = -D__ASSEMBLY__ -DMODULE -D__KERNEL__ -traditional -I@KINC@

HEADERS=apic_up_compat.h compat.h compat22.h compat24.h op_cache.h op_dcache.h oprofile.h
SOURCES=compat.c op_apic.c op_fixmap.c op_init.c op_nmi.c op_rtc.c op_syscalls.c op_util.c oprofile.c
ASMSOURCES=oprofile_nmi.S
OBJECTS=compat.o op_apic.o op_events_module.o op_fixmap.o op_init.o op_nmi.o op_rtc.o op_syscalls.o op_util.o oprofile_c.o oprofile_nmi.o
TARGET=oprofile.o
 
.PHONY: all install clean uninstall
 
all: $(TARGET)
install: all
	-$(MKDIR_P) $(MODINSTALLDIR)
	cp oprofile.o $(MODINSTALLDIR)
	if test "@KVERS@" = "`uname -r`"; then depmod -a ; fi
 
uninstall:
	-rm -f $(MODINSTALLDIR)/oprofile.o
	-rmdir --ignore-fail-on-non-empty  $(MODINSTALLDIR)
	if test "@KVERS@" = "`uname -r`"; then depmod -a ; fi
 
clean:
	rm -rf $(TARGET) $(OBJECTS) .deps
 
$(TARGET): $(OBJECTS)
	$(LD) -r -o $@ $(OBJECTS)
 
op_init.o: op_init.c
	$(CC) $(BASIC_KCFLAGS) -c -o $@ $<
 
op_events_module.o: @topdir@/libop/op_events.c
	$(CC) $(KCFLAGS) -c -o $@ $<
 
%.o: %.c
	$(CC) $(KCFLAGS) -c -o $@ $<

%_c.o: %.c
	$(CC) $(KCFLAGS) -c -o $@ $<
 
%.o: %.S
	$(CC) $(ASMFLAGS) -c -o $@ $<
 
# autodeps rules. These are modified from an example in the make info page.
MKDIR_P=mkdir -p
 
CPPFLAGS_DEPS = $(INCLUDES)

.deps/oprofile.c.d: oprofile.c
	@$(MKDIR_P) .deps
	@set -e; \
	$(CC) $(CPPFLAGS_DEPS) -MM $< | sed 's|\($*\)\.o[ :]*|\1.o oprofile_c.o $@ : |g' > $@; \
	[ -s $@ ] || rm -f $@ ;
	 
.deps/%.c.d: %.c
	@$(MKDIR_P) .deps
	@set -e; \
	$(CC) $(CPPFLAGS_DEPS) -MM $< | sed 's|\($*\)\.o[ :]*|\1.o $@ : |g' > $@; \
	[ -s $@ ] || rm -f $@ ;

# include the dependency files
DEPFILES=$(SOURCES:=.d)
-include $(DEPFILES:%=.deps/%)
